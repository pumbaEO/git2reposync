#Использовать fs

Процедура ПередСборкой(Знач РабочийКаталог) Экспорт

	Сообщить("Установка локальных зависимостей библиотек");
	КомандаOpm = Новый Команда;

	КомандаOpm.УстановитьКоманду("opm");
	КомандаOpm.ДобавитьПараметр("install -l");	
	КомандаOpm.ДобавитьЛогВыводаКоманды("task.build");

	КодВозврата = КомандаOpm.Исполнить();

	Если КодВозврата <> 0  Тогда
		ВызватьИсключение КомандаOpm.ПолучитьВывод();
	КонецЕсли;

	Сообщить("Получение последней версии плагинов");
	
	КомандаOpm = Новый Команда;
	КомандаOpm.УстановитьКоманду("opm");
	КомандаOpm.ДобавитьПараметр("run get-plugins");	
	// КомандаOpm.ДобавитьПараметр("develop");	

	КомандаOpm.ДобавитьЛогВыводаКоманды("task.build");

	КодВозврата = КомандаOpm.Исполнить();

	Если КодВозврата <> 0  Тогда
		ВызватьИсключение КомандаOpm.ПолучитьВывод();
	КонецЕсли;

КонецПроцедуры

Процедура ПослеСборки(Знач РабочийКаталог, Знач ПутьКФайлуПакета) Экспорт

	ПутьКФайлуНастройкиСкрипта = ОбъединитьПути(РабочийКаталог, "src", "cmd", "oscript.cfg");
	ФайлНастройкиСкрипта= Новый Файл(ПутьКФайлуНастройкиСкрипта);
	Если  ФайлНастройкиСкрипта.Существует() Тогда
		УдалитьФайлы(ПутьКФайлуНастройкиСкрипта);
	КонецЕсли;

	ФС.ОбеспечитьПустойКаталог(ОбъединитьПути(РабочийКаталог, "oscript_modules"));

КонецПроцедуры

Описание.Имя("git2reposync")
		.Версия("3.3.1")
		.ВерсияСреды("1.5.0")
		.ВключитьФайл("src")
		.ВключитьФайл("embedded_plugins")
		.ВключитьФайл("oscript_modules")
		.ВключитьФайл("docs")
		.ВключитьФайл("readme.md")
		.ОпределяетКласс("МенеджерПлагинов", "src/core/Классы/МенеджерПлагинов.os")
		.ОпределяетКласс("МенеджерСинхронизации", "src/core/Классы/МенеджерСинхронизации.os")
		.ОпределяетКласс("ПакетнаяСинхронизация", "src/core/Классы/ПакетнаяСинхронизация.os")
		.ИсполняемыйФайл("src/cmd/git2reposync.os");
