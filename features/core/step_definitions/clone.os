#Использовать tempfiles
// Реализация шагов BDD-фич/сценариев c помощью фреймворка https://github.com/artbear/1bdd

Перем БДД; //контекст фреймворка 1bdd


// Метод выдает список шагов, реализованных в данном файле-шагов
Функция ПолучитьСписокШагов(КонтекстФреймворкаBDD) Экспорт
	БДД = КонтекстФреймворкаBDD;

	ВсеШаги = Новый Массив;

	ВсеШаги.Добавить("ЯНаполняюBareРепозиторийИзПеременнойТестовымиДанными");

	Возврат ВсеШаги;
КонецФункции

// Реализация шагов

// Процедура выполняется перед запуском каждого сценария
Процедура ПередЗапускомСценария(Знач Узел) Экспорт
	


КонецПроцедуры

// Процедура выполняется после завершения каждого сценария
Процедура ПослеЗапускаСценария(Знач Узел) Экспорт

КонецПроцедуры


//Я наполняю bare репозиторий из переменной "URLРепозитория" тестовыми данными
Процедура ЯНаполняюBareРепозиторийИзПеременнойТестовымиДанными(Знач ПеременнаяURLРепозитория) Экспорт

	ГитРепозиторий = БДД.ПолучитьИзКонтекста("ГитРепозиторий");
	URLРепозитория = БДД.ПолучитьИзКонтекста(ПеременнаяURLРепозитория);

	ВременныйКаталог = ВременныеФайлы.СоздатьКаталог();

	ГитРепозиторий.УстановитьРабочийКаталог(ВременныйКаталог);
	ГитРепозиторий.Инициализировать();
	readme = ОбъединитьПути(ВременныйКаталог, "README.md");
	ЗаписьТекста = Новый ЗаписьТекста(readme);
	ЗаписьТекста.ЗаписатьСтроку("TESTING");
	ЗаписьТекста.Закрыть();

	ПараметрыКоманды = Новый Массив;
	ПараметрыКоманды.Добавить("add");
	ПараметрыКоманды.Добавить("--all");
	ГитРепозиторий.ВыполнитьКоманду(ПараметрыКоманды);
	ГитРепозиторий.Закоммитить("init");
	
	НастройкаОтправить = Новый НастройкаКомандыОтправить;
	НастройкаОтправить.УстановитьURLРепозиторияОтправки(URLРепозитория);
	НастройкаОтправить.ОтображатьПрогресс();
	НастройкаОтправить.ПерезаписатьИсторию();
	НастройкаОтправить.Отслеживать();
	НастройкаОтправить.ПолнаяОтправка();
	
	ГитРепозиторий.УстановитьНастройкуКомандыОтправить(НастройкаОтправить);
	
	ГитРепозиторий.Отправить();

	ВременныеФайлы.БезопасноУдалитьФайл(ВременныйКаталог);

КонецПроцедуры







