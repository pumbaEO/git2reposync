#использовать "../src/core/"
#Использовать asserts
#Использовать logos

Перем юТест;
Перем Лог;

Функция ПолучитьСписокТестов(Знач Тестирование) Экспорт

	юТест = Тестирование;
	
	ИменаТестов = Новый Массив;
	
	ИменаТестов.Добавить("ТестДолжен_ПроверитьИндексПлагинов");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьВключениеПлагинов");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьВыключениеПлагинов");
	
	Возврат ИменаТестов;

КонецФункции

Процедура ТестДолжен_ПроверитьИндексПлагинов() Экспорт
	
	КаталогПлагинов = ВременныеФайлы.СоздатьКаталог();

	МенеджерПлагинов = Новый МенеджерПлагинов(КаталогПлагинов);
	МенеджерПлагинов.УстановитьФайлПлагин(ОбъединитьПути(КаталогПроекта(), "tests", "test_plugin-0.0.1.ospx"));
	МенеджерПлагинов.ЗагрузитьПлагины();

	ИндексПлагинов = МенеджерПлагинов.ПолучитьИндексПлагинов();
	Ожидаем.Что(ИндексПлагинов.Количество(), "Количество плагинов должно быть равны").Равно(1);
	ВременныеФайлы.УдалитьФайл(КаталогПлагинов);

КонецПроцедуры

Процедура ТестДолжен_ПроверитьВключениеПлагинов() Экспорт
	
	КаталогПлагинов = ВременныеФайлы.СоздатьКаталог();

	МенеджерПлагинов = Новый МенеджерПлагинов(КаталогПлагинов);
	МенеджерПлагинов.УстановитьФайлПлагин(ОбъединитьПути(КаталогПроекта(), "tests", "test_plugin-0.0.1.ospx"));
	МенеджерПлагинов.ЗагрузитьПлагины();

	ИндексПлагинов = МенеджерПлагинов.ПолучитьИндексПлагинов();
	Ожидаем.Что(ИндексПлагинов.Количество(), "Количество плагинов должно быть равны").Равно(1);

	МенеджерПлагинов.ВключитьПлагин("test_plugin");

	Ожидаем.Что(ИндексПлагинов["test_plugin"].Включен(), "Плагин должен быть включен").ЭтоИстина();

	ВременныеФайлы.УдалитьФайл(КаталогПлагинов);

КонецПроцедуры

Процедура ТестДолжен_ПроверитьВыключениеПлагинов() Экспорт
	
	КаталогПлагинов = ВременныеФайлы.СоздатьКаталог();

	МенеджерПлагинов = Новый МенеджерПлагинов(КаталогПлагинов);
	МенеджерПлагинов.УстановитьФайлПлагин(ОбъединитьПути(КаталогПроекта(), "tests", "test_plugin-0.0.1.ospx"));
	МенеджерПлагинов.ЗагрузитьПлагины();

	ИндексПлагинов = МенеджерПлагинов.ПолучитьИндексПлагинов();
	Ожидаем.Что(ИндексПлагинов.Количество(), "Количество плагинов должно быть равны").Равно(1);

	МенеджерПлагинов.ВключитьПлагин("test_plugin");

	Ожидаем.Что(ИндексПлагинов["test_plugin"].Включен(), "Плагин должен быть включен").ЭтоИстина();

	МассивПлагинов = Новый Массив();
	МассивПлагинов.Добавить("test_plugin");

	МенеджерПлагинов.ОтключитьПлагины(МассивПлагинов);

	Ожидаем.Что(ИндексПлагинов["test_plugin"].Включен(), "Плагин должен быть выключен").ЭтоЛожь();

	ВременныеФайлы.УдалитьФайл(КаталогПлагинов);

КонецПроцедуры

Функция КаталогПлагинов()
	
	КаталогТестов = ТекущийСценарий().Каталог;

	КаталогПлагинов = ОбъединитьПути(КаталогТестов, "fixtures", "КаталогПлагинов");
	Файл = Новый Файл(КаталогПлагинов);
	Возврат Файл.ПолноеИмя;

КонецФункции

Функция КаталогПроекта()
	
	ПутьККаталогуПроекта = ОбъединитьПути(ТекущийСценарий().Каталог, "..");
	Файл = Новый Файл(ПутьККаталогуПроекта);
	Возврат Файл.ПолноеИмя;

КонецФункции

Лог = Логирование.ПолучитьЛог("oscript.lib.git2reposync");
// Лог.УстановитьУровень(УровниЛога.Отладка);
